{"ast":null,"code":"import _objectSpread from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"bsPrefix\", \"className\", \"align\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\", \"variant\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      variant = _ref.variant,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var alignRight = false;\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _useContext = useContext(DropdownContext),\n      contextAlign = _useContext.align;\n\n  align = align || contextAlign;\n  var isInputGroup = useContext(InputGroupContext);\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'start';\n        alignClasses.push(\"\".concat(prefix, \"-\").concat(brkPoint, \"-\").concat(direction));\n      }\n    } else if (align === 'end') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig: popperConfig\n  }),\n      _useDropdownMenu2 = _slicedToArray(_useDropdownMenu, 2),\n      menuProps = _useDropdownMenu2[0],\n      _useDropdownMenu2$ = _useDropdownMenu2[1],\n      hasShown = _useDropdownMenu2$.hasShown,\n      popper = _useDropdownMenu2$.popper,\n      show = _useDropdownMenu2$.show,\n      alignEnd = _useDropdownMenu2$.alignEnd,\n      toggle = _useDropdownMenu2$.toggle;\n\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.align = align;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _objectSpread(_objectSpread({}, props.style), menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, props), menuProps), {}, {\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n\n  }, alignClasses.length && {\n    'data-bs-popper': 'static'\n  }), {}, {\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && \"\".concat(prefix, \"-end\"), variant && \"\".concat(prefix, \"-\").concat(variant)].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/DropdownMenu.js"],"names":["classNames","React","useContext","useDropdownMenu","useMergedRefs","warning","DropdownContext","InputGroupContext","NavbarContext","useBootstrapPrefix","useWrappedRefWithWarning","alignPropType","jsx","_jsx","defaultProps","flip","DropdownMenu","forwardRef","ref","bsPrefix","className","align","rootCloseEvent","showProps","show","renderOnMount","as","Component","popperConfig","variant","props","alignRight","isNavbar","prefix","contextAlign","isInputGroup","alignClasses","keys","Object","process","env","NODE_ENV","length","brkPoint","direction","push","alignEnd","usePopper","offset","menuProps","hasShown","popper","toggle","close","style","placement","displayName"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignRight = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignRight = true;\n    }\n  }\n\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    alignEnd,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...(alignClasses.length && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}