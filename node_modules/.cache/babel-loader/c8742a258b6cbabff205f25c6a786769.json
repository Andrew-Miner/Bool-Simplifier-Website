{"ast":null,"code":"import _classCallCheck from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import ExpressionForm from\"./components/ExpressionForm\";import{Container,Row,Col}from\"react-bootstrap\";import QMCard from\"./components/QMCard\";import QMLog from\"./components/QMLog\";import PMLog from\"./components/PMLog\";import SOPCard from\"./components/SOPCard\";import TTCard from\"./components/TTCard\";import ITCard from\"./components/ITCard\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={expression:null,formValue:null};_this.displayExpression=function(expression){_this.setState({expression:expression});};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"py-5\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Boolean Algebra Simplifier\"}),/*#__PURE__*/_jsx(ExpressionForm,{value:this.state.formValue,displayExpression:this.displayExpression})]}),this.state.expression!==null&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(SOPCard,{expression:this.state.expression,title:\"Minimum Sum-Of-Products Solution\",bodyClass:\"scroll\"})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{className:\"mt-5\",children:/*#__PURE__*/_jsx(TTCard,{title:\"Truth Table\",table:this.state.expression.getTruthTable(),bodyClass:\"scroll\"})})}),this.state.expression.getMinTerms().length!==0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{className:\"mt-5\",children:/*#__PURE__*/_jsx(QMCard,{qmterms:this.state.expression.getEssentialImplicants(),varCount:this.state.expression.getVarCount(),expression:this.state.expression,title:\"Essential Prime Implicants\"})})}),/*#__PURE__*/_jsx(Row,{xs:1,md:this.state.expression.getQMLog().length>3?3:this.state.expression.getQMLog().length,children:/*#__PURE__*/_jsx(QMLog,{expression:this.state.expression,className:\"mt-5\"})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{className:\"mt-5\",children:/*#__PURE__*/_jsx(ITCard,{title:\"Essential Prime Implicant Chart\",expression:this.state.expression,bodyClass:\"scroll\"})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{className:\"mt-5\",children:/*#__PURE__*/_jsx(PMLog,{log:this.state.expression.getPMLog(),title:\"Petrick's Method\"})})})]})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/App.js"],"names":["React","ExpressionForm","Container","Row","Col","QMCard","QMLog","PMLog","SOPCard","TTCard","ITCard","App","state","expression","formValue","displayExpression","setState","getTruthTable","getMinTerms","length","getEssentialImplicants","getVarCount","getQMLog","getPMLog","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ExpressionForm from \"./components/ExpressionForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport QMCard from \"./components/QMCard\";\nimport QMLog from \"./components/QMLog\";\nimport PMLog from \"./components/PMLog\";\nimport SOPCard from \"./components/SOPCard\";\nimport TTCard from \"./components/TTCard\";\nimport ITCard from \"./components/ITCard\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = { expression: null, formValue: null };\n\n    displayExpression = (expression) => {\n        this.setState({ expression: expression });\n    };\n\n    render() {\n        return (\n            <Container>\n                <div className=\"py-5\">\n                    <h2>Boolean Algebra Simplifier</h2>\n                    <ExpressionForm\n                        value={this.state.formValue}\n                        displayExpression={this.displayExpression}\n                    />\n                </div>\n                {this.state.expression !== null && (\n                    <>\n                        <Row>\n                            <Col>\n                                <SOPCard\n                                    expression={this.state.expression}\n                                    title=\"Minimum Sum-Of-Products Solution\"\n                                    bodyClass=\"scroll\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"mt-5\">\n                                <TTCard\n                                    title=\"Truth Table\"\n                                    table={this.state.expression.getTruthTable()}\n                                    bodyClass=\"scroll\"\n                                />\n                            </Col>\n                        </Row>\n                        {this.state.expression.getMinTerms().length !== 0 && (\n                            <>\n                                <Row>\n                                    <Col className=\"mt-5\">\n                                        <QMCard\n                                            qmterms={this.state.expression.getEssentialImplicants()}\n                                            varCount={this.state.expression.getVarCount()}\n                                            expression={this.state.expression}\n                                            title=\"Essential Prime Implicants\"\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row\n                                    xs={1}\n                                    md={\n                                        this.state.expression.getQMLog().length > 3\n                                            ? 3\n                                            : this.state.expression.getQMLog().length\n                                    }\n                                >\n                                    <QMLog\n                                        expression={this.state.expression}\n                                        className=\"mt-5\"\n                                    />\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-5\">\n                                        <ITCard\n                                            title=\"Essential Prime Implicant Chart\"\n                                            expression={this.state.expression}\n                                            bodyClass=\"scroll\"\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-5\">\n                                        <PMLog\n                                            log={this.state.expression.getPMLog()}\n                                            title=\"Petrick's Method\"\n                                        />\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n                    </>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}