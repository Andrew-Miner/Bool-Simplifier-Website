{"ast":null,"code":"import _objectSpread from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"bsPrefix\", \"className\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"];\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Toast = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$transition = _ref.transition,\n      Transition = _ref$transition === void 0 ? Fade : _ref$transition,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? true : _ref$animation,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 5000 : _ref$delay,\n      _ref$autohide = _ref.autohide,\n      autohide = _ref$autohide === void 0 ? false : _ref$autohide,\n      onClose = _ref.onClose,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  var delayRef = useRef(delay);\n  var onCloseRef = useRef(onClose);\n  useEffect(function () {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = useTimeout();\n  var autohideToast = !!(autohide && show);\n  var autohideFunc = useCallback(function () {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(function () {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  var toastContext = useMemo(function () {\n    return {\n      onClose: onClose\n    };\n  }, [onClose]);\n  var hasAnimation = !!(Transition && animation);\n\n  var toast = /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    className: classNames(bsPrefix, className, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }));\n\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/Toast.js"],"names":["React","useEffect","useMemo","useRef","useCallback","classNames","useTimeout","Fade","ToastHeader","ToastBody","useBootstrapPrefix","ToastContext","jsx","_jsx","Toast","forwardRef","ref","bsPrefix","className","transition","Transition","show","animation","delay","autohide","onClose","props","delayRef","onCloseRef","current","autohideTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","role","Provider","value","children","in","unmountOnExit","displayName","Object","assign","Body","Header"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Fade from './Fade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = Fade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n\n  const toast = /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});"]},"metadata":{},"sourceType":"module"}