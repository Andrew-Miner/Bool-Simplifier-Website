{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\JavaScript Projects\\\\bool-simp\\\\src\\\\components\\\\ExpressionForm.jsx\";\nimport { thisExpression } from \"@babel/types\";\nimport React from \"react\";\nimport { InputGroup, FormControl, Button, Form, Col, Row, Accordion } from \"react-bootstrap\";\nimport BoolExpression from \"../scripts/BooleanSimplifier/BoolExpression\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ExpressionForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        expValue: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      alert(\"Expression submitted: \" + this.state.expValue);\n\n      try {\n        this.expression = BoolExpression.ExpressionInstance(this.state.expValue, true);\n        this.setState({\n          isInvalid: false\n        }, () => {\n          this.props.displayExpression(this.expression);\n        });\n      } catch (error) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({\n          isInvalid: true,\n          errorMsg: \"Error: \" + error + \"!\"\n        });\n      }\n    };\n\n    this.state = {\n      expValue: \"\",\n      isInvalid: false,\n      errorMsg: \"Invalid Expression\"\n    };\n    this.expression = null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: this.state.validated,\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"expressionForm\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                required: true,\n                placeholder: \"Enter Expression\",\n                \"aria-label\": \"Enter Expression\",\n                \"aria-describedby\": \"basic-addon\",\n                onChange: this.handleChange,\n                isInvalid: this.state.isInvalid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                id: \"button-addon\",\n                type: \"submit\",\n                children: \"Simplify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: this.state.errorMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          flush: true,\n          children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: \"0\",\n            style: {\n              paddingTop: 0,\n              paddingBottom: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: \"Operator Symbols and Examples\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ExpressionForm;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/components/ExpressionForm.jsx"],"names":["thisExpression","React","InputGroup","FormControl","Button","Form","Col","Row","Accordion","BoolExpression","ExpressionForm","Component","constructor","props","handleChange","event","setState","expValue","target","value","handleSubmit","alert","state","expression","ExpressionInstance","isInvalid","displayExpression","error","preventDefault","stopPropagation","errorMsg","render","validated","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import { thisExpression } from \"@babel/types\";\r\nimport React from \"react\";\r\nimport {\r\n    InputGroup,\r\n    FormControl,\r\n    Button,\r\n    Form,\r\n    Col,\r\n    Row,\r\n    Accordion,\r\n} from \"react-bootstrap\";\r\nimport BoolExpression from \"../scripts/BooleanSimplifier/BoolExpression\";\r\n\r\nclass ExpressionForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { expValue: \"\", isInvalid: false, errorMsg: \"Invalid Expression\" };\r\n        this.expression = null;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ expValue: event.target.value });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        alert(\"Expression submitted: \" + this.state.expValue);\r\n\r\n        try {\r\n            this.expression = BoolExpression.ExpressionInstance(\r\n                this.state.expValue,\r\n                true\r\n            );\r\n            this.setState({ isInvalid: false }, () => {\r\n                this.props.displayExpression(this.expression);\r\n            });\r\n        } catch (error) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.setState({ isInvalid: true, errorMsg: \"Error: \" + error + \"!\" });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    noValidate\r\n                    validated={this.state.validated}\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <Row>\r\n                        <Form.Group as={Col} controlId=\"expressionForm\">\r\n                            <InputGroup hasValidation>\r\n                                <FormControl\r\n                                    required\r\n                                    placeholder=\"Enter Expression\"\r\n                                    aria-label=\"Enter Expression\"\r\n                                    aria-describedby=\"basic-addon\"\r\n                                    onChange={this.handleChange}\r\n                                    isInvalid={this.state.isInvalid}\r\n                                />\r\n                                <Button\r\n                                    variant=\"outline-secondary\"\r\n                                    id=\"button-addon\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Simplify\r\n                                </Button>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.errorMsg}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Row>\r\n                </Form>\r\n                <Row>\r\n                    <Accordion flush>\r\n                        <Accordion.Item\r\n                            eventKey=\"0\"\r\n                            style={{ paddingTop: 0, paddingBottom: 0 }}\r\n                        >\r\n                            <Accordion.Header>\r\n                                Operator Symbols and Examples\r\n                            </Accordion.Header>\r\n\r\n                            <Accordion.Body>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                                sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                                aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                                ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                Duis aute irure dolor in reprehenderit in voluptate velit\r\n                                esse cillum dolore eu fugiat nulla pariatur. Excepteur\r\n                                sint occaecat cupidatat non proident, sunt in culpa qui\r\n                                officia deserunt mollit anim id est laborum.\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    </Accordion>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpressionForm;\r\n"]},"metadata":{},"sourceType":"module"}