{"ast":null,"code":"import _objectSpread from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\"; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nvar noop = function noop() {};\n\nvar AbstractNav = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'ul' : _ref$as,\n      onSelect = _ref.onSelect,\n      activeKey = _ref.activeKey,\n      role = _ref.role,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  var forceUpdate = useForceUpdate();\n  var needsRefocusRef = useRef(false);\n  var parentOnSelect = useContext(SelectableContext);\n  var tabContext = useContext(TabContext);\n  var getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  var listNode = useRef(null);\n\n  var getNextActiveChild = function getNextActiveChild(offset) {\n    var currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    var items = qsa(currentListNode, '[data-rb-event-key]:not(.disabled)');\n    var activeChild = currentListNode.querySelector('.active');\n    if (!activeChild) return null;\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  var handleSelect = function handleSelect(key, event) {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    var nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    if (listNode.current && needsRefocusRef.current) {\n      var activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  var mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role: role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nexport default AbstractNav;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/AbstractNav.js"],"names":["qsa","React","useContext","useEffect","useRef","useForceUpdate","useMergedRefs","NavContext","SelectableContext","makeEventKey","TabContext","jsx","_jsx","noop","AbstractNav","forwardRef","ref","as","Component","onSelect","activeKey","role","onKeyDown","props","forceUpdate","needsRefocusRef","parentOnSelect","tabContext","getControlledId","getControllerId","listNode","getNextActiveChild","offset","currentListNode","current","items","activeChild","querySelector","index","indexOf","nextIndex","length","handleSelect","key","event","handleKeyDown","nextActiveChild","preventDefault","dataset","rbEventKey","focus","mergedRef","Provider","value","children"],"mappings":"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","sourcesContent":["import qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst AbstractNav = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'ul',\n  onSelect,\n  activeKey,\n  role,\n  onKeyDown,\n  ...props\n}, ref) => {\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  const listNode = useRef(null);\n\n  const getNextActiveChild = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, '[data-rb-event-key]:not(.disabled)');\n    const activeChild = currentListNode.querySelector('.active');\n    if (!activeChild) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    let nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, { ...props,\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      })\n    })\n  });\n});\nexport default AbstractNav;"]},"metadata":{},"sourceType":"module"}