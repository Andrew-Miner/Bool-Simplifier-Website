{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\JavaScript Projects\\\\bool-simp\\\\src\\\\components\\\\QMLog.jsx\";\nimport QMCard from \"./QMCard\";\nimport { Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QMLog(props) {\n  let iterationCount = 0;\n  return props.expression.getQMLog().map(qmTerms => {\n    qmTerms.reverse();\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: props.className,\n      children: /*#__PURE__*/_jsxDEV(QMCard, {\n        title: \"Iteration #\" + parseInt(iterationCount++),\n        qmterms: qmTerms,\n        varCount: props.expression.getVarCount(),\n        expression: props.expression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, \"Iteration-\" + parseInt(iterationCount), false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  });\n}\n_c = QMLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"QMLog\");","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/components/QMLog.jsx"],"names":["QMCard","Col","QMLog","props","iterationCount","expression","getQMLog","map","qmTerms","reverse","className","parseInt","getVarCount"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAIC,cAAc,GAAG,CAArB;AACA,SAAOD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,GAA4BC,GAA5B,CAAiCC,OAAD,IAAa;AAChDA,IAAAA,OAAO,CAACC,OAAR;AACA,wBACI,QAAC,GAAD;AACI,MAAA,SAAS,EAAEN,KAAK,CAACO,SADrB;AAAA,6BAII,QAAC,MAAD;AACI,QAAA,KAAK,EAAE,gBAAgBC,QAAQ,CAACP,cAAc,EAAf,CADnC;AAEI,QAAA,OAAO,EAAEI,OAFb;AAGI,QAAA,QAAQ,EAAEL,KAAK,CAACE,UAAN,CAAiBO,WAAjB,EAHd;AAII,QAAA,UAAU,EAAET,KAAK,CAACE;AAJtB;AAAA;AAAA;AAAA;AAAA;AAJJ,OAES,eAAeM,QAAQ,CAACP,cAAD,CAFhC;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH,GAfM,CAAP;AAgBH;KAlBuBF,K","sourcesContent":["import QMCard from \"./QMCard\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nexport default function QMLog(props) {\r\n    let iterationCount = 0;\r\n    return props.expression.getQMLog().map((qmTerms) => {\r\n        qmTerms.reverse();\r\n        return (\r\n            <Col\r\n                className={props.className}\r\n                key={\"Iteration-\" + parseInt(iterationCount)}\r\n            >\r\n                <QMCard\r\n                    title={\"Iteration #\" + parseInt(iterationCount++)}\r\n                    qmterms={qmTerms}\r\n                    varCount={props.expression.getVarCount()}\r\n                    expression={props.expression}\r\n                />\r\n            </Col>\r\n        );\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}