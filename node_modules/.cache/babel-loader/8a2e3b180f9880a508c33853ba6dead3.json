{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\JavaScript Projects\\\\bool-simp\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ExpressionForm from \"./components/ExpressionForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport QMCard from \"./components/QMCard\";\nimport QMLog from \"./components/QMLog\";\nimport PMLog from \"./components/PMLog\";\nimport SOPCard from \"./components/SOPCard\";\nimport TTCard from \"./components/TTCard\";\nimport ITCard from \"./components/ITCard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expression: null,\n      formValue: null\n    };\n\n    this.displayExpression = expression => {\n      this.setState({\n        expression: expression\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Boolean Algebra Simplifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ExpressionForm, {\n            value: this.state.formValue,\n            displayExpression: this.displayExpression\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), this.state.expression !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(SOPCard, {\n                expression: this.state.expression,\n                title: \"Minimum Sum-Of-Products Solution\",\n                bodyClass: \"scroll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-5\",\n              children: /*#__PURE__*/_jsxDEV(TTCard, {\n                title: \"Truth Table\",\n                table: this.state.expression.getTruthTable(),\n                bodyClass: \"scroll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), this.state.expression.getMinTerms().length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \"mt-5\",\n                children: /*#__PURE__*/_jsxDEV(QMCard, {\n                  qmterms: this.state.expression.getEssentialImplicants(),\n                  varCount: this.state.expression.getVarCount(),\n                  expression: this.state.expression,\n                  title: \"Essential Prime Implicants\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              xs: 1,\n              md: this.state.expression.getQMLog().length > 3 ? 3 : this.state.expression.getQMLog().length,\n              children: /*#__PURE__*/_jsxDEV(QMLog, {\n                expression: this.state.expression,\n                className: \"mt-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \"mt-5\",\n                children: /*#__PURE__*/_jsxDEV(ITCard, {\n                  title: \"Essential Prime Implicant Chart\",\n                  expression: this.state.expression,\n                  bodyClass: \"scroll\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \"mt-5\",\n                children: /*#__PURE__*/_jsxDEV(PMLog, {\n                  log: this.state.expression.getPMLog(),\n                  title: \"Petrick's Method\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Email Me: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"mailto:andrew.miner3@gmail.com\",\n          children: \"andrew.miner3@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/App.js"],"names":["React","ExpressionForm","Container","Row","Col","QMCard","QMLog","PMLog","SOPCard","TTCard","ITCard","App","Component","state","expression","formValue","displayExpression","setState","render","getTruthTable","getMinTerms","length","getEssentialImplicants","getVarCount","getQMLog","getPMLog"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ExpressionForm from \"./components/ExpressionForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport QMCard from \"./components/QMCard\";\nimport QMLog from \"./components/QMLog\";\nimport PMLog from \"./components/PMLog\";\nimport SOPCard from \"./components/SOPCard\";\nimport TTCard from \"./components/TTCard\";\nimport ITCard from \"./components/ITCard\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = { expression: null, formValue: null };\n\n    displayExpression = (expression) => {\n        this.setState({ expression: expression });\n    };\n\n    render() {\n        return (\n            <>\n                <Container>\n                    <div className=\"py-5\">\n                        <h2>Boolean Algebra Simplifier</h2>\n                        <ExpressionForm\n                            value={this.state.formValue}\n                            displayExpression={this.displayExpression}\n                        />\n                    </div>\n                    {this.state.expression !== null && (\n                        <>\n                            <Row>\n                                <Col>\n                                    <SOPCard\n                                        expression={this.state.expression}\n                                        title=\"Minimum Sum-Of-Products Solution\"\n                                        bodyClass=\"scroll\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-5\">\n                                    <TTCard\n                                        title=\"Truth Table\"\n                                        table={this.state.expression.getTruthTable()}\n                                        bodyClass=\"scroll\"\n                                    />\n                                </Col>\n                            </Row>\n                            {this.state.expression.getMinTerms().length !== 0 && (\n                                <>\n                                    <Row>\n                                        <Col className=\"mt-5\">\n                                            <QMCard\n                                                qmterms={this.state.expression.getEssentialImplicants()}\n                                                varCount={this.state.expression.getVarCount()}\n                                                expression={this.state.expression}\n                                                title=\"Essential Prime Implicants\"\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row\n                                        xs={1}\n                                        md={\n                                            this.state.expression.getQMLog().length > 3\n                                                ? 3\n                                                : this.state.expression.getQMLog().length\n                                        }\n                                    >\n                                        <QMLog\n                                            expression={this.state.expression}\n                                            className=\"mt-5\"\n                                        />\n                                    </Row>\n                                    <Row>\n                                        <Col className=\"mt-5\">\n                                            <ITCard\n                                                title=\"Essential Prime Implicant Chart\"\n                                                expression={this.state.expression}\n                                                bodyClass=\"scroll\"\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col className=\"mt-5\">\n                                            <PMLog\n                                                log={this.state.expression.getPMLog()}\n                                                title=\"Petrick's Method\"\n                                            />\n                                        </Col>\n                                    </Row>\n                                </>\n                            )}\n                        </>\n                    )}\n                </Container>\n                <span>\n                    {\"Email Me: \"}\n                    <a href=\"mailto:andrew.miner3@gmail.com\">andrew.miner3@gmail.com</a>\n                </span>\n            </>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}