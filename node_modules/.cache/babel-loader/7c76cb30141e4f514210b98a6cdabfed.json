{"ast":null,"code":"import _objectSpread from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"active\", \"className\", \"eventKey\", \"onSelect\", \"onClick\", \"as\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  disabled: false\n};\nvar AbstractNavItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      className = _ref.className,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      onClick = _ref.onClick,\n      Component = _ref.as,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var navKey = makeEventKey(eventKey, props.href);\n  var parentOnSelect = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n  var isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    var contextControllerId = navContext.getControllerId(navKey);\n    var contextControlledId = navContext.getControlledId(navKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControllerId || !props.id, \"[react-bootstrap] The provided id '\".concat(props.id, \"' was overwritten by the current navContext with '\").concat(contextControllerId, \"'.\")) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControlledId || !props['aria-controls'], \"[react-bootstrap] The provided aria-controls value '\".concat(props['aria-controls'], \"' was overwritten by the current navContext with '\").concat(contextControlledId, \"'.\")) : void 0;\n    props['data-rb-event-key'] = navKey;\n    props.id = contextControllerId || props.id;\n    props['aria-controls'] = contextControlledId || props['aria-controls'];\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    if (props.disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    props['aria-selected'] = isActive;\n  }\n\n  var handleOnclick = useEventCallback(function (e) {\n    onClick == null ? void 0 : onClick(e);\n    if (navKey == null) return;\n    onSelect == null ? void 0 : onSelect(navKey, e);\n    parentOnSelect == null ? void 0 : parentOnSelect(navKey, e);\n  });\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  }));\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/AbstractNavItem.js"],"names":["classNames","React","useContext","useEventCallback","warning","NavContext","SelectableContext","makeEventKey","jsx","_jsx","defaultProps","disabled","AbstractNavItem","forwardRef","ref","active","className","eventKey","onSelect","onClick","Component","as","props","navKey","href","parentOnSelect","navContext","isActive","role","contextControllerId","getControllerId","contextControlledId","getControlledId","process","env","NODE_ENV","id","activeKey","tabIndex","handleOnclick","e"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  disabled: false\n};\nconst AbstractNavItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  className,\n  eventKey,\n  onSelect,\n  onClick,\n  as: Component,\n  ...props\n}, ref) => {\n  const navKey = makeEventKey(eventKey, props.href);\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  let isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(navKey);\n    const contextControlledId = navContext.getControlledId(navKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControllerId || !props.id, `[react-bootstrap] The provided id '${props.id}' was overwritten by the current navContext with '${contextControllerId}'.`) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControlledId || !props['aria-controls'], `[react-bootstrap] The provided aria-controls value '${props['aria-controls']}' was overwritten by the current navContext with '${contextControlledId}'.`) : void 0;\n    props['data-rb-event-key'] = navKey;\n    props.id = contextControllerId || props.id;\n    props['aria-controls'] = contextControlledId || props['aria-controls'];\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    if (props.disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    props['aria-selected'] = isActive;\n  }\n\n  const handleOnclick = useEventCallback(e => {\n    onClick == null ? void 0 : onClick(e);\n    if (navKey == null) return;\n    onSelect == null ? void 0 : onSelect(navKey, e);\n    parentOnSelect == null ? void 0 : parentOnSelect(navKey, e);\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  });\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;"]},"metadata":{},"sourceType":"module"}