{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start'\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const onSelectCtx = useContext(SelectableContext);\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const handleToggle = useEventCallback((nextShow, event, source = event.type) => {\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n    onToggle == null ? void 0 : onToggle(nextShow, event, {\n      source\n    });\n  });\n  const handleSelect = useEventCallback((key, event) => {\n    onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    onSelect == null ? void 0 : onSelect(key, event);\n    handleToggle(false, event, 'select');\n  }); // TODO RTL: Flip directions based on RTL setting.\n\n  let direction = drop;\n\n  if (drop === 'start') {\n    direction = 'left';\n  } else if (drop === 'end') {\n    direction = 'right';\n  }\n\n  const contextValue = useMemo(() => ({\n    align\n  }), [align]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleSelect,\n      children: /*#__PURE__*/_jsx(BaseDropdown, {\n        drop: direction,\n        show: show,\n        alignEnd: align === 'end',\n        onToggle: handleToggle,\n        focusFirstItemOnShow: focusFirstItemOnShow,\n        itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n        children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n          ref: ref,\n          className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n        })\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/Dropdown.js"],"names":["classNames","React","useContext","useMemo","BaseDropdown","useUncontrolled","useEventCallback","DropdownContext","DropdownItem","DropdownMenu","DropdownToggle","InputGroupContext","SelectableContext","useBootstrapPrefix","createWithBsPrefix","alignPropType","jsx","_jsx","DropdownHeader","defaultProps","role","DropdownDivider","Component","DropdownItemText","navbar","align","Dropdown","forwardRef","pProps","ref","bsPrefix","drop","show","className","onSelect","onToggle","focusFirstItemOnShow","as","_4","props","onSelectCtx","isInputGroup","prefix","handleToggle","nextShow","event","source","type","currentTarget","document","key","handleSelect","direction","contextValue","Provider","value","children","alignEnd","itemSelector","displayName","Object","assign","Toggle","Menu","Item","ItemText","Divider","Header"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start'\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const onSelectCtx = useContext(SelectableContext);\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const handleToggle = useEventCallback((nextShow, event, source = event.type) => {\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n    onToggle == null ? void 0 : onToggle(nextShow, event, {\n      source\n    });\n  });\n  const handleSelect = useEventCallback((key, event) => {\n    onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    onSelect == null ? void 0 : onSelect(key, event);\n    handleToggle(false, event, 'select');\n  }); // TODO RTL: Flip directions based on RTL setting.\n\n  let direction = drop;\n\n  if (drop === 'start') {\n    direction = 'left';\n  } else if (drop === 'end') {\n    direction = 'right';\n  }\n\n  const contextValue = useMemo(() => ({\n    align\n  }), [align]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleSelect,\n      children: /*#__PURE__*/_jsx(BaseDropdown, {\n        drop: direction,\n        show: show,\n        alignEnd: align === 'end',\n        onToggle: handleToggle,\n        focusFirstItemOnShow: focusFirstItemOnShow,\n        itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n        children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n          ref: ref,\n          className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n        })\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});"]},"metadata":{},"sourceType":"module"}