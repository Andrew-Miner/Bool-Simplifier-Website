{"ast":null,"code":"export default function StructFactory(names) {\n  var argNames = names.split(\" \");\n  var count = names.length;\n\n  function constructor() {\n    for (var i = 0; i < count; i++) {\n      this[argNames[i]] = arguments[i];\n    }\n  }\n\n  return constructor;\n}\n_c = StructFactory;\n\nvar _c;\n\n$RefreshReg$(_c, \"StructFactory\");","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/scripts/StructFactory.js"],"names":["StructFactory","names","argNames","split","count","length","constructor","i","arguments"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACzC,MAAIC,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAf;AACA,MAAIC,KAAK,GAAGH,KAAK,CAACI,MAAlB;;AACA,WAASC,WAAT,GAAuB;AACnB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC5B,WAAKL,QAAQ,CAACK,CAAD,CAAb,IAAoBC,SAAS,CAACD,CAAD,CAA7B;AACH;AACJ;;AACD,SAAOD,WAAP;AACH;KATuBN,a","sourcesContent":["export default function StructFactory(names) {\r\n    var argNames = names.split(\" \");\r\n    var count = names.length;\r\n    function constructor() {\r\n        for (var i = 0; i < count; i++) {\r\n            this[argNames[i]] = arguments[i];\r\n        }\r\n    }\r\n    return constructor;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}