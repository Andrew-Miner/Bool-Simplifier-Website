{"ast":null,"code":"import _defineProperty from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport ModalManager from 'react-overlays/ModalManager';\nvar Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nvar BootstrapModalManager = /*#__PURE__*/function (_ModalManager) {\n  _inherits(BootstrapModalManager, _ModalManager);\n\n  var _super = _createSuper(BootstrapModalManager);\n\n  function BootstrapModalManager() {\n    _classCallCheck(this, BootstrapModalManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BootstrapModalManager, [{\n    key: \"adjustAndStore\",\n    value: function adjustAndStore(prop, element, adjust) {\n      var actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n      // @ts-ignore\n\n      element.dataset[prop] = actual;\n      css(element, _defineProperty({}, prop, \"\".concat(parseFloat(css(element, prop)) + adjust, \"px\")));\n    }\n  }, {\n    key: \"restore\",\n    value: function restore(prop, element) {\n      var value = element.dataset[prop];\n\n      if (value !== undefined) {\n        delete element.dataset[prop];\n        css(element, _defineProperty({}, prop, value));\n      }\n    }\n  }, {\n    key: \"setContainerStyle\",\n    value: function setContainerStyle(containerState, container) {\n      var _this = this;\n\n      _get(_getPrototypeOf(BootstrapModalManager.prototype), \"setContainerStyle\", this).call(this, containerState, container);\n\n      if (!containerState.overflowing) return;\n      var size = getScrollbarSize();\n      qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n        return _this.adjustAndStore('paddingRight', el, size);\n      });\n      qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n        return _this.adjustAndStore('marginRight', el, -size);\n      });\n      qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n        return _this.adjustAndStore('marginRight', el, size);\n      });\n    }\n  }, {\n    key: \"removeContainerStyle\",\n    value: function removeContainerStyle(containerState, container) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(BootstrapModalManager.prototype), \"removeContainerStyle\", this).call(this, containerState, container);\n\n      qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n        return _this2.restore('paddingRight', el);\n      });\n      qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n        return _this2.restore('marginRight', el);\n      });\n      qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n        return _this2.restore('marginRight', el);\n      });\n    }\n  }]);\n\n  return BootstrapModalManager;\n}(ModalManager);\n\nexport { BootstrapModalManager as default };","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/BootstrapModalManager.js"],"names":["css","qsa","getScrollbarSize","ModalManager","Selector","FIXED_CONTENT","STICKY_CONTENT","NAVBAR_TOGGLER","BootstrapModalManager","prop","element","adjust","actual","style","dataset","parseFloat","value","undefined","containerState","container","overflowing","size","forEach","el","adjustAndStore","restore"],"mappings":"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","sourcesContent":["import css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport ModalManager from 'react-overlays/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nexport default class BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState, container) {\n    super.setContainerStyle(containerState, container);\n    if (!containerState.overflowing) return;\n    const size = getScrollbarSize();\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore('paddingRight', el, size));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore('marginRight', el, -size));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore('marginRight', el, size));\n  }\n\n  removeContainerStyle(containerState, container) {\n    super.removeContainerStyle(containerState, container);\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore('paddingRight', el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore('marginRight', el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore('marginRight', el));\n  }\n\n}"]},"metadata":{},"sourceType":"module"}