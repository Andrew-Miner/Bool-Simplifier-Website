{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\JavaScript Projects\\\\bool-simp\\\\src\\\\components\\\\AboutAccordion.jsx\";\nimport { Col, Row, Accordion } from \"react-bootstrap\";\nimport OperatorTable from \"./OperatorTable\";\nimport ExampleGroup from \"./ExampleGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXAMPLES_1 = [\"A\", \"~A\", \"~~A\", \"~(~~A)\"];\nconst EXAMPLES_2 = [\"A + 1\", \"A + 0\", \"A + B\", \"A + ~B\"];\nconst EXAMPLES_3 = [\"m(2, 3, 7, 9, 11, 13)\", \"m(2, 3, 7, 9, 11, 13) + d(1, 10, 15)\", \"~(A^C)@(B%D)\", \"(A+~C+B*D)*(~A+(~B+D)*(C+~D))\"];\nexport default function AboutAccordion(props) {\n  let handleClick = e => {\n    props.onClick(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    flush: true,\n    children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Operator Symbols \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 42\n          }, this), \" Examples \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 60\n          }, this), \" About\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(OperatorTable, {\n              bodyClass: \"bg-white\",\n              headClass: \"table-header-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              xs: 1,\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: \"Welcome to my Boolean Algebra Simplifier. My simplifier relies on two key algorithms, Petrick's Method and the Quine McCluskey Algorithm. It also utilizes a light wieght implementation of an Early Recognizer/Parser.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(ExampleGroup, {\n                  examples: EXAMPLES_1,\n                  handleExample: handleClick,\n                  className: \"mt-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(ExampleGroup, {\n                  examples: EXAMPLES_2,\n                  handleExample: handleClick,\n                  className: \"mt-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(ExampleGroup, {\n                  examples: EXAMPLES_3,\n                  handleExample: handleClick,\n                  className: \"mt-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = AboutAccordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutAccordion\");","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/components/AboutAccordion.jsx"],"names":["Col","Row","Accordion","OperatorTable","ExampleGroup","EXAMPLES_1","EXAMPLES_2","EXAMPLES_3","AboutAccordion","props","handleClick","e","onClick"],"mappings":";AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,QAAnB,CAAnB;AACA,MAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,QAA5B,CAAnB;AACA,MAAMC,UAAU,GAAG,CACf,uBADe,EAEf,sCAFe,EAGf,cAHe,EAIf,+BAJe,CAAnB;AAOA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC1C,MAAIC,WAAW,GAAIC,CAAD,IAAO;AACrBF,IAAAA,KAAK,CAACG,OAAN,CAAcD,CAAd;AACH,GAFD;;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACI,QAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,QAAQ,EAAC,GAAzB;AAAA,8BACI,QAAC,SAAD,CAAW,MAAX;AAAA,+BACI;AAAA,uDACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADrB,6BACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,SAAD,CAAW,IAAX;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI,QAAC,aAAD;AACI,cAAA,SAAS,EAAC,UADd;AAEI,cAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,sCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,YAAD;AACI,kBAAA,QAAQ,EAAEN,UADd;AAEI,kBAAA,aAAa,EAAEK,WAFnB;AAGI,kBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBARJ,eAeI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,YAAD;AACI,kBAAA,QAAQ,EAAEJ,UADd;AAEI,kBAAA,aAAa,EAAEI,WAFnB;AAGI,kBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAfJ,eAsBI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI,QAAC,YAAD;AACI,kBAAA,QAAQ,EAAEH,UADd;AAEI,kBAAA,aAAa,EAAEG,WAFnB;AAGI,kBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsDH;KA3DuBF,c","sourcesContent":["import { Col, Row, Accordion } from \"react-bootstrap\";\r\nimport OperatorTable from \"./OperatorTable\";\r\nimport ExampleGroup from \"./ExampleGroup\";\r\n\r\nconst EXAMPLES_1 = [\"A\", \"~A\", \"~~A\", \"~(~~A)\"];\r\nconst EXAMPLES_2 = [\"A + 1\", \"A + 0\", \"A + B\", \"A + ~B\"];\r\nconst EXAMPLES_3 = [\r\n    \"m(2, 3, 7, 9, 11, 13)\",\r\n    \"m(2, 3, 7, 9, 11, 13) + d(1, 10, 15)\",\r\n    \"~(A^C)@(B%D)\",\r\n    \"(A+~C+B*D)*(~A+(~B+D)*(C+~D))\",\r\n];\r\n\r\nexport default function AboutAccordion(props) {\r\n    let handleClick = (e) => {\r\n        props.onClick(e);\r\n    };\r\n\r\n    return (\r\n        <Accordion flush>\r\n            <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header>\r\n                    <p>\r\n                        Operator Symbols <b>/</b> Examples <b>/</b> About\r\n                    </p>\r\n                </Accordion.Header>\r\n\r\n                <Accordion.Body>\r\n                    <Row>\r\n                        <Col>\r\n                            <OperatorTable\r\n                                bodyClass=\"bg-white\"\r\n                                headClass=\"table-header-dark\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row xs={1}>\r\n                                <Row>\r\n                                    Welcome to my Boolean Algebra Simplifier. My\r\n                                    simplifier relies on two key algorithms, Petrick's\r\n                                    Method and the Quine McCluskey Algorithm. It also\r\n                                    utilizes a light wieght implementation of an Early\r\n                                    Recognizer/Parser.\r\n                                </Row>\r\n                                <Col md={3}>\r\n                                    <ExampleGroup\r\n                                        examples={EXAMPLES_1}\r\n                                        handleExample={handleClick}\r\n                                        className=\"mt-3\"\r\n                                    />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ExampleGroup\r\n                                        examples={EXAMPLES_2}\r\n                                        handleExample={handleClick}\r\n                                        className=\"mt-3\"\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <ExampleGroup\r\n                                        examples={EXAMPLES_3}\r\n                                        handleExample={handleClick}\r\n                                        className=\"mt-3\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </Accordion>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}