{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\JavaScript Projects\\\\bool-simp\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport React from \"react\";\nimport ExpressionForm from \"./components/ExpressionForm\";\nimport { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\nimport QMCard from \"./components/QMCard\";\nimport QMLog from \"./components/QMLog\";\nimport PMLog from \"./components/PMLog\";\nimport SOPCard from \"./components/SOPCard\";\nimport TTCard from \"./components/TTCard\";\nimport ITCard from \"./components/ITCard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expression: null,\n      formValue: null\n    };\n\n    this.displayExpression = expression => {\n      this.setState({\n        expression: expression\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Boolean Algebra Simplifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ExpressionForm, {\n          value: this.state.formValue,\n          displayExpression: this.displayExpression\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), this.state.expression !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(SOPCard, {\n              expression: this.state.expression,\n              title: \"Minimum Sum-Of-Products Solution\",\n              bodyClass: \"scroll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            children: /*#__PURE__*/_jsxDEV(TTCard, {\n              title: \"Truth Table\",\n              table: this.state.expression.getTruthTable(),\n              bodyClass: \"scroll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), this.state.expression.getMinTerms().length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-5\",\n              children: /*#__PURE__*/_jsxDEV(QMCard, {\n                qmterms: this.state.expression.getEssentialImplicants(),\n                varCount: this.state.expression.getVarCount(),\n                expression: this.state.expression,\n                title: \"Essential Prime Implicants\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            xs: 1,\n            md: this.state.expression.getQMLog(),\n            children: /*#__PURE__*/_jsxDEV(QMLog, {\n              expression: this.state.expression,\n              className: \"mt-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-5\",\n              children: /*#__PURE__*/_jsxDEV(ITCard, {\n                title: \"Essential Prime Implicant Chart\",\n                expression: this.state.expression,\n                bodyClass: \"scroll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-5\",\n              children: /*#__PURE__*/_jsxDEV(PMLog, {\n                log: this.state.expression.getPMLog(),\n                title: \"Petrick's Method\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/App.js"],"names":["React","ExpressionForm","Container","Row","Col","Card","Badge","QMCard","QMLog","PMLog","SOPCard","TTCard","ITCard","App","Component","state","expression","formValue","displayExpression","setState","render","getTruthTable","getMinTerms","length","getEssentialImplicants","getVarCount","getQMLog","getPMLog"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport React from \"react\";\nimport ExpressionForm from \"./components/ExpressionForm\";\nimport { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\nimport QMCard from \"./components/QMCard\";\nimport QMLog from \"./components/QMLog\";\nimport PMLog from \"./components/PMLog\";\nimport SOPCard from \"./components/SOPCard\";\nimport TTCard from \"./components/TTCard\";\nimport ITCard from \"./components/ITCard\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = { expression: null, formValue: null };\n\n    displayExpression = (expression) => {\n        this.setState({ expression: expression });\n    };\n\n    render() {\n        return (\n            <Container>\n                <div className=\"py-5\">\n                    <h2>Boolean Algebra Simplifier</h2>\n                    <ExpressionForm\n                        value={this.state.formValue}\n                        displayExpression={this.displayExpression}\n                    />\n                </div>\n                {this.state.expression !== null && (\n                    <>\n                        <Row>\n                            <Col>\n                                <SOPCard\n                                    expression={this.state.expression}\n                                    title=\"Minimum Sum-Of-Products Solution\"\n                                    bodyClass=\"scroll\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"mt-5\">\n                                <TTCard\n                                    title=\"Truth Table\"\n                                    table={this.state.expression.getTruthTable()}\n                                    bodyClass=\"scroll\"\n                                />\n                            </Col>\n                        </Row>\n                        {this.state.expression.getMinTerms().length !== 0 && (\n                            <>\n                                <Row>\n                                    <Col className=\"mt-5\">\n                                        <QMCard\n                                            qmterms={this.state.expression.getEssentialImplicants()}\n                                            varCount={this.state.expression.getVarCount()}\n                                            expression={this.state.expression}\n                                            title=\"Essential Prime Implicants\"\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row xs={1} md={this.state.expression.getQMLog() }>\n                                    <QMLog\n                                        expression={this.state.expression}\n                                        className=\"mt-5\"\n                                    />\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-5\">\n                                        <ITCard\n                                            title=\"Essential Prime Implicant Chart\"\n                                            expression={this.state.expression}\n                                            bodyClass=\"scroll\"\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-5\">\n                                        <PMLog\n                                            log={this.state.expression.getPMLog()}\n                                            title=\"Petrick's Method\"\n                                        />\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n                    </>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}