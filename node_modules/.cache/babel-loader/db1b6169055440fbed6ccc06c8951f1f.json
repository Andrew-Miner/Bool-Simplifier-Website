{"ast":null,"code":"import{Col,Row,Accordion}from\"react-bootstrap\";import OperatorTable from\"./OperatorTable\";import ExampleGroup from\"./ExampleGroup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EXAMPLES_1=[\"A\",\"~A\",\"~~A\",\"A * ~A\"];var EXAMPLES_2=[\"A + 1\",\"A + 0\",\"A + B\",\"A + ~B\"];var EXAMPLES_3=[\"m(2, 3, 7, 9, 11, 13)\",\"m(2, 3, 7, 9, 11, 13) + d(1, 10, 15)\",\"~(A^C)@(B%D)\",\"(A+~C+B*D)*(~A+(~B+D)*(C+~D))\"];export default function AboutAccordion(props){var handleClick=function handleClick(e){props.onClick(e);};return/*#__PURE__*/_jsx(Accordion,{defaultActiveKey:\"0\",flush:true,children:/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:\"0\",children:[/*#__PURE__*/_jsx(Accordion.Header,{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Operator Symbols \",/*#__PURE__*/_jsx(\"b\",{children:\"/\"}),\" Examples \",/*#__PURE__*/_jsx(\"b\",{children:\"/\"}),\" About\"]})}),/*#__PURE__*/_jsx(Accordion.Body,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"align-self-center pt-3\",children:/*#__PURE__*/_jsx(OperatorTable,{bodyClass:\"bg-white\",headClass:\"table-header-dark\"})}),/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsxs(Row,{xs:1,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"About\"})}),/*#__PURE__*/_jsxs(\"p\",{style:{textIndent:\"20px\"},children:[\"This application can simplifiy either a boolean algebra expression or a set of minimum terms and \\\"don't care\\\" terms. Both\",/*#__PURE__*/_jsx(\"b\",{children:\" Quine McCluskey's Algorithm\"}),\" and\",/*#__PURE__*/_jsx(\"b\",{children:\" Petrick's Method\"}),\" are utilized to reduce an expression to it's minimum sum-of-products. An\",/*#__PURE__*/_jsx(\"b\",{children:\" Earley Parser\"}),\" is used to parse expressions given by the user. This project and the Earley Parser were written by \",/*#__PURE__*/_jsx(\"b\",{children:\"Andrew Miner\"}),\".\",\" \",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/Andrew-Miner/Bool-Simplifier-Website\",children:\"Check out the GitHub!\"})]})]}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(ExampleGroup,{examples:EXAMPLES_1,handleExample:handleClick,className:\"mt-3\"},\"examples_1\")}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(ExampleGroup,{examples:EXAMPLES_2,handleExample:handleClick,className:\"mt-3\"},\"examples_2\")}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(ExampleGroup,{examples:EXAMPLES_3,handleExample:handleClick,className:\"mt-3\"},\"examples_3\")})]})})]})})]})});}","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/components/AboutAccordion.jsx"],"names":["Col","Row","Accordion","OperatorTable","ExampleGroup","EXAMPLES_1","EXAMPLES_2","EXAMPLES_3","AboutAccordion","props","handleClick","e","onClick","textIndent"],"mappings":"AAAA,OAASA,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,CAAC,GAAD,CAAM,IAAN,CAAY,KAAZ,CAAmB,QAAnB,CAAnB,CACA,GAAMC,CAAAA,UAAU,CAAG,CAAC,OAAD,CAAU,OAAV,CAAmB,OAAnB,CAA4B,QAA5B,CAAnB,CACA,GAAMC,CAAAA,UAAU,CAAG,CACf,uBADe,CAEf,sCAFe,CAGf,cAHe,CAIf,+BAJe,CAAnB,CAOA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC1C,GAAIC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACrBF,KAAK,CAACG,OAAN,CAAcD,CAAd,EACH,CAFD,CAIA,mBACI,KAAC,SAAD,EAAW,gBAAgB,CAAC,GAA5B,CAAgC,KAAK,KAArC,uBACI,MAAC,SAAD,CAAW,IAAX,EAAgB,QAAQ,CAAC,GAAzB,wBACI,KAAC,SAAD,CAAW,MAAX,wBACI,sDACqB,wBADrB,2BACuC,wBADvC,YADJ,EADJ,cAOI,KAAC,SAAD,CAAW,IAAX,wBACI,MAAC,GAAD,yBACI,KAAC,GAAD,EAAK,SAAS,CAAC,wBAAf,uBACI,KAAC,aAAD,EACI,SAAS,CAAC,UADd,CAEI,SAAS,CAAC,mBAFd,EADJ,EADJ,cAOI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,wBACI,MAAC,GAAD,yBACI,WAAI,SAAS,CAAC,aAAd,uBACI,iCADJ,EADJ,cAII,WAAG,KAAK,CAAE,CAAEE,UAAU,CAAE,MAAd,CAAV,sJAII,mDAJJ,qBAKI,wCALJ,0FAOI,qCAPJ,qHAS2B,mCAT3B,KASgD,GAThD,cAUI,UAAG,IAAI,CAAC,yDAAR,mCAVJ,GAJJ,GADJ,cAoBI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,KAAC,YAAD,EACI,QAAQ,CAAER,UADd,CAEI,aAAa,CAAEK,WAFnB,CAGI,SAAS,CAAC,MAHd,EAIQ,YAJR,CADJ,EApBJ,cA4BI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,KAAC,YAAD,EACI,QAAQ,CAAEJ,UADd,CAEI,aAAa,CAAEI,WAFnB,CAGI,SAAS,CAAC,MAHd,EAIQ,YAJR,CADJ,EA5BJ,cAoCI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,KAAC,YAAD,EACI,QAAQ,CAAEH,UADd,CAEI,aAAa,CAAEG,WAFnB,CAGI,SAAS,CAAC,MAHd,EAIQ,YAJR,CADJ,EApCJ,GADJ,EAPJ,GADJ,EAPJ,GADJ,EADJ,CAqEH","sourcesContent":["import { Col, Row, Accordion } from \"react-bootstrap\";\r\nimport OperatorTable from \"./OperatorTable\";\r\nimport ExampleGroup from \"./ExampleGroup\";\r\n\r\nconst EXAMPLES_1 = [\"A\", \"~A\", \"~~A\", \"A * ~A\"];\r\nconst EXAMPLES_2 = [\"A + 1\", \"A + 0\", \"A + B\", \"A + ~B\"];\r\nconst EXAMPLES_3 = [\r\n    \"m(2, 3, 7, 9, 11, 13)\",\r\n    \"m(2, 3, 7, 9, 11, 13) + d(1, 10, 15)\",\r\n    \"~(A^C)@(B%D)\",\r\n    \"(A+~C+B*D)*(~A+(~B+D)*(C+~D))\",\r\n];\r\n\r\nexport default function AboutAccordion(props) {\r\n    let handleClick = (e) => {\r\n        props.onClick(e);\r\n    };\r\n\r\n    return (\r\n        <Accordion defaultActiveKey=\"0\" flush>\r\n            <Accordion.Item eventKey=\"0\">\r\n                <Accordion.Header>\r\n                    <p>\r\n                        Operator Symbols <b>/</b> Examples <b>/</b> About\r\n                    </p>\r\n                </Accordion.Header>\r\n\r\n                <Accordion.Body>\r\n                    <Row>\r\n                        <Col className=\"align-self-center pt-3\">\r\n                            <OperatorTable\r\n                                bodyClass=\"bg-white\"\r\n                                headClass=\"table-header-dark\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row xs={1}>\r\n                                <Row>\r\n                                    <h4 className=\"text-center\">\r\n                                        <strong>About</strong>\r\n                                    </h4>\r\n                                    <p style={{ textIndent: \"20px\" }}>\r\n                                        This application can simplifiy either a boolean\r\n                                        algebra expression or a set of minimum terms and\r\n                                        \"don't care\" terms. Both\r\n                                        <b> Quine McCluskey's Algorithm</b> and\r\n                                        <b> Petrick's Method</b> are utilized to reduce an\r\n                                        expression to it's minimum sum-of-products. An\r\n                                        <b> Earley Parser</b> is used to parse expressions\r\n                                        given by the user. This project and the Earley\r\n                                        Parser were written by <b>Andrew Miner</b>.{\" \"}\r\n                                        <a href=\"https://github.com/Andrew-Miner/Bool-Simplifier-Website\">\r\n                                            Check out the GitHub!\r\n                                        </a>\r\n                                    </p>\r\n                                </Row>\r\n                                <Col md={3}>\r\n                                    <ExampleGroup\r\n                                        examples={EXAMPLES_1}\r\n                                        handleExample={handleClick}\r\n                                        className=\"mt-3\"\r\n                                        key=\"examples_1\"\r\n                                    />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ExampleGroup\r\n                                        examples={EXAMPLES_2}\r\n                                        handleExample={handleClick}\r\n                                        className=\"mt-3\"\r\n                                        key=\"examples_2\"\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <ExampleGroup\r\n                                        examples={EXAMPLES_3}\r\n                                        handleExample={handleClick}\r\n                                        className=\"mt-3\"\r\n                                        key=\"examples_3\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </Accordion>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}