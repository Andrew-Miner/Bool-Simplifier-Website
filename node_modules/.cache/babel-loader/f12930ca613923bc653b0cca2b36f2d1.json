{"ast":null,"code":"import _objectSpread from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"transition\", \"popperConfig\"],\n    _excluded2 = [\"props\", \"arrowProps\", \"show\", \"update\", \"forceUpdate\", \"placement\", \"state\"];\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from 'react-overlays/Overlay';\nimport safeFindDOMNode from 'react-overlays/safeFindDOMNode';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  var ref = props.ref;\n  var aRef = arrowProps.ref;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = function (r) {\n    return ref(safeFindDOMNode(r));\n  });\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = function (r) {\n    return aRef(safeFindDOMNode(r));\n  });\n}\n\nvar Overlay = /*#__PURE__*/React.forwardRef(function (_ref, outerRef) {\n  var overlay = _ref.children,\n      transition = _ref.transition,\n      _ref$popperConfig = _ref.popperConfig,\n      popperConfig = _ref$popperConfig === void 0 ? {} : _ref$popperConfig,\n      outerProps = _objectWithoutProperties(_ref, _excluded);\n\n  var popperRef = useRef({});\n\n  var _useOverlayOffset = useOverlayOffset(),\n      _useOverlayOffset2 = _slicedToArray(_useOverlayOffset, 2),\n      ref = _useOverlayOffset2[0],\n      modifiers = _useOverlayOffset2[1];\n\n  var mergedRef = useMergedRefs(outerRef, ref);\n  var actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, _objectSpread(_objectSpread({}, outerProps), {}, {\n    ref: mergedRef,\n    popperConfig: _objectSpread(_objectSpread({}, popperConfig), {}, {\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    }),\n    transition: actualTransition,\n    children: function children(_ref2) {\n      var overlayProps = _ref2.props,\n          arrowProps = _ref2.arrowProps,\n          show = _ref2.show,\n          update = _ref2.update,\n          _ = _ref2.forceUpdate,\n          placement = _ref2.placement,\n          state = _ref2.state,\n          props = _objectWithoutProperties(_ref2, _excluded2);\n\n      var _state$modifiersData$;\n\n      wrapRefs(overlayProps, arrowProps);\n      var popper = Object.assign(popperRef.current, {\n        state: state,\n        scheduleUpdate: update,\n        placement: placement,\n        outOfBoundaries: (state == null ? void 0 : (_state$modifiersData$ = state.modifiersData.hide) == null ? void 0 : _state$modifiersData$.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, props), overlayProps), {}, {\n        placement: placement,\n        show: show\n      }, !transition && show && {\n        className: 'show'\n      }), {}, {\n        popper: popper,\n        arrowProps: arrowProps\n      }));\n      return /*#__PURE__*/React.cloneElement(overlay, _objectSpread(_objectSpread(_objectSpread({}, props), overlayProps), {}, {\n        placement: placement,\n        arrowProps: arrowProps,\n        popper: popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: _objectSpread(_objectSpread({}, overlay.props.style), overlayProps.style)\n      }));\n    }\n  }));\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/Overlay.js"],"names":["React","useRef","classNames","BaseOverlay","safeFindDOMNode","useMergedRefs","useOverlayOffset","Fade","jsx","_jsx","defaultProps","transition","rootClose","show","placement","wrapRefs","props","arrowProps","ref","aRef","__wrapped","r","Overlay","forwardRef","outerRef","overlay","children","popperConfig","outerProps","popperRef","modifiers","mergedRef","actualTransition","undefined","concat","overlayProps","update","_","forceUpdate","state","_state$modifiersData$","popper","Object","assign","current","scheduleUpdate","outOfBoundaries","modifiersData","hide","isReferenceHidden","className","cloneElement","style","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from 'react-overlays/Overlay';\nimport safeFindDOMNode from 'react-overlays/safeFindDOMNode';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset();\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: ({\n      props: overlayProps,\n      arrowProps,\n      show,\n      update,\n      forceUpdate: _,\n      placement,\n      state,\n      ...props\n    }) => {\n      var _state$modifiersData$;\n\n      wrapRefs(overlayProps, arrowProps);\n      const popper = Object.assign(popperRef.current, {\n        state,\n        scheduleUpdate: update,\n        placement,\n        outOfBoundaries: (state == null ? void 0 : (_state$modifiersData$ = state.modifiersData.hide) == null ? void 0 : _state$modifiersData$.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...props,\n        ...overlayProps,\n        placement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...props,\n        ...overlayProps,\n        placement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}