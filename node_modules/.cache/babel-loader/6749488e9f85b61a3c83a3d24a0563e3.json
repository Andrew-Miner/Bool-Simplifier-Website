{"ast":null,"code":"import React from\"react\";import{Badge,Card}from\"react-bootstrap\";import QM from\"../scripts/BooleanSimplifier/QMFunctions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function QMCard(props){var it=0;var end=props.qmterms.length-1;var getMinTermColor=function getMinTermColor(minTerm){if(!props.expression)return\"info\";if(props.expression.isMinTerm(minTerm))return\"primary\";if(props.expression.isDontCare(minTerm))return\"danger\";return\"info\";};var getImplicantColor=function getImplicantColor(qmTerm){if(!props.expression)return\"warning\";if(props.expression.isEssentialImplicant(qmTerm))return\"success\";return\"warning\";};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{as:\"h4\",className:props.headerClass,children:props.title}),/*#__PURE__*/_jsx(Card.Body,{className:props.bodyClass,children:props.qmterms.map(function(term){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-1 mt-2 d-flex justify-content-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[\"(\",function(){var minTerms=QM.extractMinTerms(term);var end=minTerms.length-1;var it=0;return QM.extractMinTerms(term).map(function(minTerm){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Badge,{pill:true,bg:getMinTermColor(minTerm),children:minTerm}),it++!==end&&\",\"]},minTerm);});}(),\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(Badge,{bg:getImplicantColor(term),className:\"ml-1\",children:QM.toString(term,props.varCount)})})]}),it++!==end&&/*#__PURE__*/_jsx(\"hr\",{className:\"m-0\"})]},term.term.toString()+\"-\"+term.dashMask.toString());})})]});}","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/components/QMCard.jsx"],"names":["React","Badge","Card","QM","QMCard","props","it","end","qmterms","length","getMinTermColor","minTerm","expression","isMinTerm","isDontCare","getImplicantColor","qmTerm","isEssentialImplicant","headerClass","title","bodyClass","map","term","minTerms","extractMinTerms","toString","varCount","dashMask"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,IAAhB,KAA4B,iBAA5B,CACA,MAAOC,CAAAA,EAAP,KAAe,0CAAf,C,wFAEA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CAClC,GAAIC,CAAAA,EAAE,CAAG,CAAT,CACA,GAAIC,CAAAA,GAAG,CAAGF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAuB,CAAjC,CAEA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,CAAa,CAC/B,GAAI,CAACN,KAAK,CAACO,UAAX,CAAuB,MAAO,MAAP,CACvB,GAAIP,KAAK,CAACO,UAAN,CAAiBC,SAAjB,CAA2BF,OAA3B,CAAJ,CAAyC,MAAO,SAAP,CACzC,GAAIN,KAAK,CAACO,UAAN,CAAiBE,UAAjB,CAA4BH,OAA5B,CAAJ,CAA0C,MAAO,QAAP,CAC1C,MAAO,MAAP,CACH,CALD,CAOA,GAAII,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAAY,CAChC,GAAI,CAACX,KAAK,CAACO,UAAX,CAAuB,MAAO,SAAP,CACvB,GAAIP,KAAK,CAACO,UAAN,CAAiBK,oBAAjB,CAAsCD,MAAtC,CAAJ,CAAmD,MAAO,SAAP,CACnD,MAAO,SAAP,CACH,CAJD,CAMA,mBACI,MAAC,IAAD,yBACI,KAAC,IAAD,CAAM,MAAN,EAAa,EAAE,CAAC,IAAhB,CAAqB,SAAS,CAAEX,KAAK,CAACa,WAAtC,UACKb,KAAK,CAACc,KADX,EADJ,cAII,KAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAEd,KAAK,CAACe,SAA5B,UACKf,KAAK,CAACG,OAAN,CAAca,GAAd,CAAkB,SAACC,IAAD,CAAU,CACzB,mBACI,MAAC,KAAD,CAAO,QAAP,yBAGI,aAAK,SAAS,CAAC,0CAAf,wBACI,aAAK,SAAS,CAAC,EAAf,WACK,GADL,CAEM,UAAM,CACJ,GAAMC,CAAAA,QAAQ,CAAGpB,EAAE,CAACqB,eAAH,CAAmBF,IAAnB,CAAjB,CACA,GAAMf,CAAAA,GAAG,CAAGgB,QAAQ,CAACd,MAAT,CAAkB,CAA9B,CACA,GAAIH,CAAAA,EAAE,CAAG,CAAT,CACA,MAAOH,CAAAA,EAAE,CAACqB,eAAH,CAAmBF,IAAnB,EAAyBD,GAAzB,CAA6B,SAACV,OAAD,qBAChC,MAAC,KAAD,CAAO,QAAP,yBACI,KAAC,KAAD,EAAO,IAAI,KAAX,CAAY,EAAE,CAAED,eAAe,CAACC,OAAD,CAA/B,UACKA,OADL,EADJ,CAIKL,EAAE,KAAOC,GAAT,EAAgB,GAJrB,GAAqBI,OAArB,CADgC,EAA7B,CAAP,CAQH,CAZA,EAFL,CAeK,GAfL,GADJ,cAkBI,YAAK,SAAS,CAAC,EAAf,uBACI,KAAC,KAAD,EAAO,EAAE,CAAEI,iBAAiB,CAACO,IAAD,CAA5B,CAAoC,SAAS,CAAC,MAA9C,UACKnB,EAAE,CAACsB,QAAH,CAAYH,IAAZ,CAAkBjB,KAAK,CAACqB,QAAxB,CADL,EADJ,EAlBJ,GAHJ,CA2BKpB,EAAE,KAAOC,GAAT,eAAgB,WAAI,SAAS,CAAC,KAAd,EA3BrB,GACSe,IAAI,CAACA,IAAL,CAAUG,QAAV,GAAuB,GAAvB,CAA6BH,IAAI,CAACK,QAAL,CAAcF,QAAd,EADtC,CADJ,CA+BH,CAhCA,CADL,EAJJ,GADJ,CA0CH","sourcesContent":["import React from \"react\";\r\nimport { Badge, Card } from \"react-bootstrap\";\r\nimport QM from \"../scripts/BooleanSimplifier/QMFunctions\";\r\n\r\nexport default function QMCard(props) {\r\n    let it = 0;\r\n    let end = props.qmterms.length - 1;\r\n\r\n    let getMinTermColor = (minTerm) => {\r\n        if (!props.expression) return \"info\";\r\n        if (props.expression.isMinTerm(minTerm)) return \"primary\";\r\n        if (props.expression.isDontCare(minTerm)) return \"danger\";\r\n        return \"info\";\r\n    };\r\n\r\n    let getImplicantColor = (qmTerm) => {\r\n        if (!props.expression) return \"warning\";\r\n        if (props.expression.isEssentialImplicant(qmTerm)) return \"success\";\r\n        return \"warning\";\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header as=\"h4\" className={props.headerClass}>\r\n                {props.title}\r\n            </Card.Header>\r\n            <Card.Body className={props.bodyClass}>\r\n                {props.qmterms.map((term) => {\r\n                    return (\r\n                        <React.Fragment\r\n                            key={term.term.toString() + \"-\" + term.dashMask.toString()}\r\n                        >\r\n                            <div className=\"mb-1 mt-2 d-flex justify-content-between\">\r\n                                <div className=\"\">\r\n                                    {\"(\"}\r\n                                    {(() => {\r\n                                        const minTerms = QM.extractMinTerms(term);\r\n                                        const end = minTerms.length - 1;\r\n                                        let it = 0;\r\n                                        return QM.extractMinTerms(term).map((minTerm) => (\r\n                                            <React.Fragment key={minTerm}>\r\n                                                <Badge pill bg={getMinTermColor(minTerm)}>\r\n                                                    {minTerm}\r\n                                                </Badge>\r\n                                                {it++ !== end && \",\"}\r\n                                            </React.Fragment>\r\n                                        ));\r\n                                    })()}\r\n                                    {\")\"}\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <Badge bg={getImplicantColor(term)} className=\"ml-1\">\r\n                                        {QM.toString(term, props.varCount)}\r\n                                    </Badge>\r\n                                </div>\r\n                            </div>\r\n                            {it++ !== end && <hr className=\"m-0\" />}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}