{"ast":null,"code":"import _objectSpread from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutProperties(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _objectSpread(_objectSpread({}, props), {}, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutProperties(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n\n  var pane = /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n\n  if (Transition) pane = /*#__PURE__*/_jsx(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: pane\n  }); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: pane\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/TabPane.js"],"names":["classNames","React","useContext","useBootstrapPrefix","TabContext","SelectableContext","makeEventKey","Fade","jsx","_jsx","useTabContext","props","context","activeKey","getControlledId","getControllerId","rest","shouldTransition","transition","key","eventKey","active","id","mountOnEnter","unmountOnExit","TabPane","forwardRef","ref","bsPrefix","className","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","as","Component","_","prefix","pane","role","in","children","Provider","value","displayName"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useTabContext(props) {\n  const context = useContext(TabContext);\n  if (!context) return props;\n  const {\n    activeKey,\n    getControlledId,\n    getControllerId,\n    ...rest\n  } = context;\n  const shouldTransition = props.transition !== false && rest.transition !== false;\n  const key = makeEventKey(props.eventKey);\n  return { ...props,\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  };\n}\n\nconst TabPane = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix,\n    className,\n    active,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    eventKey: _,\n    ...rest\n  } = useTabContext(props);\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n\n  let pane = /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active\n    })\n  });\n\n  if (Transition) pane = /*#__PURE__*/_jsx(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: pane\n  }); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: pane\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"]},"metadata":{},"sourceType":"module"}