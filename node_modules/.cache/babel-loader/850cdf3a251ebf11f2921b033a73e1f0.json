{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\JavaScript Projects\\\\bool-simp\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport ExpressionForm from \"./components/ExpressionForm\";\nimport { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expression: null\n    };\n\n    this.displayExpression = expression => {\n      this.setState({\n        expression: expression\n      });\n    };\n  }\n\n  render() {\n    //return <ExpressionForm displayExpression={this.displayExpression} />;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Boolean Algebra Simplifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ExpressionForm, {\n          displayExpression: this.displayExpression\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), this.state.expression !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Minimum Sum-Of-Products Solutions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: this.state.expression.getSOPStrings().map(sop => /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    pill: true,\n                    bg: \"primary\",\n                    children: sop\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            children: \"1 of 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: \"2 of 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/App.js"],"names":["React","ExpressionForm","Container","Row","Col","Card","Badge","App","Component","state","expression","displayExpression","setState","render","getSOPStrings","map","sop"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,KAApC,QAAiD,iBAAjD;;;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADsB;;AAAA,SAG9BC,iBAH8B,GAGTD,UAAD,IAAgB;AAChC,WAAKE,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAEA;AAAd,OAAd;AACH,KAL6B;AAAA;;AAO9BG,EAAAA,MAAM,GAAG;AACL;AACA,wBACI,QAAC,SAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,cAAD;AAAgB,UAAA,iBAAiB,EAAE,KAAKF;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAKK,KAAKF,KAAL,CAAWC,UAAX,KAA0B,IAA1B,iBACG;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI,QAAC,IAAD;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,qCACI,QAAC,GAAD;AAAA,0BACK,KAAKD,KAAL,CAAWC,UAAX,CACII,aADJ,GAEIC,GAFJ,CAESC,GAAD,iBACD,QAAC,GAAD;AAAA,yCACI,QAAC,KAAD;AAAO,oBAAA,IAAI,MAAX;AAAY,oBAAA,EAAE,EAAC,SAAf;AAAA,8BACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAHP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqBI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA,sBANR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AA7C6B;;AAgDlC,eAAeT,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport ExpressionForm from \"./components/ExpressionForm\";\nimport { Container, Row, Col, Card, Badge } from \"react-bootstrap\";\n\nclass App extends React.Component {\n    state = { expression: null };\n\n    displayExpression = (expression) => {\n        this.setState({ expression: expression });\n    };\n\n    render() {\n        //return <ExpressionForm displayExpression={this.displayExpression} />;\n        return (\n            <Container>\n                <div className=\"py-5\">\n                    <h2>Boolean Algebra Simplifier</h2>\n                    <ExpressionForm displayExpression={this.displayExpression} />\n                </div>\n                {this.state.expression !== null && (\n                    <>\n                        <Row>\n                            <Card>\n                                <Card.Header>\n                                    Minimum Sum-Of-Products Solutions\n                                </Card.Header>\n                                <Card.Body>\n                                    <Row>\n                                        {this.state.expression\n                                            .getSOPStrings()\n                                            .map((sop) => (\n                                                <Col>\n                                                    <Badge pill bg=\"primary\">\n                                                        {sop}\n                                                    </Badge>\n                                                </Col>\n                                            ))}\n                                    </Row>\n                                </Card.Body>\n                            </Card>\n                        </Row>\n                        <Row>\n                            <Col md={8}>1 of 2</Col>\n                            <Col md={4}>2 of 2</Col>\n                        </Row>\n                    </>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}