{"ast":null,"code":"import _classCallCheck from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{InputGroup,FormControl,Button,Form,Col}from\"react-bootstrap\";import BoolExpression from\"../scripts/BooleanSimplifier/BoolExpression\";import AboutAccordion from\"./AboutAccordion\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ExpressionForm=/*#__PURE__*/function(_React$Component){_inherits(ExpressionForm,_React$Component);var _super=_createSuper(ExpressionForm);function ExpressionForm(props){var _this;_classCallCheck(this,ExpressionForm);_this=_super.call(this,props);_this.handleChange=function(event){_this.setState({expValue:event.target.value});};_this.handleSubmit=function(event){event.preventDefault();event.stopPropagation();try{_this.expression=BoolExpression.ExpressionInstance(_this.state.expValue,true);_this.setState({isInvalid:false},function(){_this.props.displayExpression(_this.expression);});}catch(error){_this.setState({isInvalid:true,errorMsg:\"Error: \"+error.message+\"!\"});}};_this.displayExpression=function(str){try{_this.expression=BoolExpression.ExpressionInstance(str,true);_this.setState({isInvalid:false,expValue:str},function(){_this.props.displayExpression(_this.expression);});}catch(error){_this.setState({isInvalid:true,expValue:str,errorMsg:\"Error: \"+error.message+\"!\"});}};_this.state={expValue:\"\",isInvalid:false,errorMsg:\"Invalid Expression\"};_this.expression=null;return _this;}_createClass(ExpressionForm,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form,{noValidate:true,validated:this.state.validated,onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsx(Form.Group,{as:Col,controlId:\"expressionForm\",children:/*#__PURE__*/_jsxs(InputGroup,{hasValidation:true,children:[/*#__PURE__*/_jsx(FormControl,{required:true,placeholder:\"Enter Expression\",\"aria-label\":\"Enter Expression\",\"aria-describedby\":\"basic-addon\",onChange:this.handleChange,isInvalid:this.state.isInvalid,value:this.state.expValue}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",id:\"button-addon\",type:\"submit\",children:\"Simplify\"}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:this.state.errorMsg})]})}),/*#__PURE__*/_jsx(AboutAccordion,{onClick:this.displayExpression})]})});}}]);return ExpressionForm;}(React.Component);export default ExpressionForm;","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/components/ExpressionForm.jsx"],"names":["React","InputGroup","FormControl","Button","Form","Col","BoolExpression","AboutAccordion","ExpressionForm","props","handleChange","event","setState","expValue","target","value","handleSubmit","preventDefault","stopPropagation","expression","ExpressionInstance","state","isInvalid","displayExpression","error","errorMsg","message","str","validated","Component"],"mappings":"wqBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,MAAlC,CAA0CC,IAA1C,CAAgDC,GAAhD,KAA2D,iBAA3D,CACA,MAAOC,CAAAA,cAAP,KAA2B,6CAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,gJAEMC,CAAAA,c,4HACF,wBAAYC,KAAZ,CAAmB,gDACf,uBAAMA,KAAN,EADe,MAUnBC,YAVmB,CAUJ,SAACC,KAAD,CAAW,CACtB,MAAKC,QAAL,CAAc,CAAEC,QAAQ,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAAzB,CAAd,EACH,CAZkB,OAcnBC,YAdmB,CAcJ,SAACL,KAAD,CAAW,CACtBA,KAAK,CAACM,cAAN,GACAN,KAAK,CAACO,eAAN,GACA,GAAI,CACA,MAAKC,UAAL,CAAkBb,cAAc,CAACc,kBAAf,CACd,MAAKC,KAAL,CAAWR,QADG,CAEd,IAFc,CAAlB,CAIA,MAAKD,QAAL,CAAc,CAAEU,SAAS,CAAE,KAAb,CAAd,CAAoC,UAAM,CACtC,MAAKb,KAAL,CAAWc,iBAAX,CAA6B,MAAKJ,UAAlC,EACH,CAFD,EAGH,CAAC,MAAOK,KAAP,CAAc,CACZ,MAAKZ,QAAL,CAAc,CAAEU,SAAS,CAAE,IAAb,CAAmBG,QAAQ,CAAE,UAAYD,KAAK,CAACE,OAAlB,CAA4B,GAAzD,CAAd,EACH,CACJ,CA5BkB,OA8BnBH,iBA9BmB,CA8BC,SAACI,GAAD,CAAS,CACzB,GAAI,CACA,MAAKR,UAAL,CAAkBb,cAAc,CAACc,kBAAf,CAAkCO,GAAlC,CAAuC,IAAvC,CAAlB,CACA,MAAKf,QAAL,CAAc,CAAEU,SAAS,CAAE,KAAb,CAAoBT,QAAQ,CAAEc,GAA9B,CAAd,CAAmD,UAAM,CACrD,MAAKlB,KAAL,CAAWc,iBAAX,CAA6B,MAAKJ,UAAlC,EACH,CAFD,EAGH,CAAC,MAAOK,KAAP,CAAc,CACZ,MAAKZ,QAAL,CAAc,CACVU,SAAS,CAAE,IADD,CAEVT,QAAQ,CAAEc,GAFA,CAGVF,QAAQ,CAAE,UAAYD,KAAK,CAACE,OAAlB,CAA4B,GAH5B,CAAd,EAKH,CACJ,CA3CkB,CAEf,MAAKL,KAAL,CAAa,CACTR,QAAQ,CAAE,EADD,CAETS,SAAS,CAAE,KAFF,CAGTG,QAAQ,CAAE,oBAHD,CAAb,CAKA,MAAKN,UAAL,CAAkB,IAAlB,CAPe,aAQlB,C,iDAqCD,iBAAS,CACL,mBACI,sCACI,MAAC,IAAD,EACI,UAAU,KADd,CAEI,SAAS,CAAE,KAAKE,KAAL,CAAWO,SAF1B,CAGI,QAAQ,CAAE,KAAKZ,YAHnB,wBAKI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAEX,GAAhB,CAAqB,SAAS,CAAC,gBAA/B,uBACI,MAAC,UAAD,EAAY,aAAa,KAAzB,wBACI,KAAC,WAAD,EACI,QAAQ,KADZ,CAEI,WAAW,CAAC,kBAFhB,CAGI,aAAW,kBAHf,CAII,mBAAiB,aAJrB,CAKI,QAAQ,CAAE,KAAKK,YALnB,CAMI,SAAS,CAAE,KAAKW,KAAL,CAAWC,SAN1B,CAOI,KAAK,CAAE,KAAKD,KAAL,CAAWR,QAPtB,EADJ,cAUI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,EAAE,CAAC,cAA/B,CAA8C,IAAI,CAAC,QAAnD,sBAVJ,cAaI,KAAC,IAAD,CAAM,OAAN,CAAc,QAAd,EAAuB,IAAI,CAAC,SAA5B,UACK,KAAKQ,KAAL,CAAWI,QADhB,EAbJ,GADJ,EALJ,cAwBI,KAAC,cAAD,EAAgB,OAAO,CAAE,KAAKF,iBAA9B,EAxBJ,GADJ,EADJ,CA8BH,C,4BA7EwBvB,KAAK,CAAC6B,S,EAgFnC,cAAerB,CAAAA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { InputGroup, FormControl, Button, Form, Col } from \"react-bootstrap\";\r\nimport BoolExpression from \"../scripts/BooleanSimplifier/BoolExpression\";\r\nimport AboutAccordion from \"./AboutAccordion\";\r\n\r\nclass ExpressionForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expValue: \"\",\r\n            isInvalid: false,\r\n            errorMsg: \"Invalid Expression\",\r\n        };\r\n        this.expression = null;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ expValue: event.target.value });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        try {\r\n            this.expression = BoolExpression.ExpressionInstance(\r\n                this.state.expValue,\r\n                true\r\n            );\r\n            this.setState({ isInvalid: false }, () => {\r\n                this.props.displayExpression(this.expression);\r\n            });\r\n        } catch (error) {\r\n            this.setState({ isInvalid: true, errorMsg: \"Error: \" + error.message + \"!\" });\r\n        }\r\n    };\r\n\r\n    displayExpression = (str) => {\r\n        try {\r\n            this.expression = BoolExpression.ExpressionInstance(str, true);\r\n            this.setState({ isInvalid: false, expValue: str }, () => {\r\n                this.props.displayExpression(this.expression);\r\n            });\r\n        } catch (error) {\r\n            this.setState({\r\n                isInvalid: true,\r\n                expValue: str,\r\n                errorMsg: \"Error: \" + error.message + \"!\",\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    noValidate\r\n                    validated={this.state.validated}\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <Form.Group as={Col} controlId=\"expressionForm\">\r\n                        <InputGroup hasValidation>\r\n                            <FormControl\r\n                                required\r\n                                placeholder=\"Enter Expression\"\r\n                                aria-label=\"Enter Expression\"\r\n                                aria-describedby=\"basic-addon\"\r\n                                onChange={this.handleChange}\r\n                                isInvalid={this.state.isInvalid}\r\n                                value={this.state.expValue}\r\n                            />\r\n                            <Button variant=\"secondary\" id=\"button-addon\" type=\"submit\">\r\n                                Simplify\r\n                            </Button>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {this.state.errorMsg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <AboutAccordion onClick={this.displayExpression} />\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpressionForm;\r\n"]},"metadata":{},"sourceType":"module"}