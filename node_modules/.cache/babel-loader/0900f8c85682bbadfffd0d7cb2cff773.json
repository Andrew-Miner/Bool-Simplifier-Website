{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Documents\\\\JavaScript Projects\\\\bool-simp\\\\src\\\\components\\\\QMCard.jsx\";\nimport { Badge, Card, Row, Col } from \"react-bootstrap\";\nimport QM from \"../scripts/BooleanSimplifier/QMFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QMCard(props) {\n  let it = 0;\n  let end = props.qmterms.length - 1;\n\n  let getColor = qmTerm => {};\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: props.qmterms.map(term => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1 mt-1 d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [console.log(\"Term: \", term), \"(\", (() => {\n                const minTerms = QM.extractMinTerms(term);\n                const end = minTerms.length - 1;\n                let it = 0;\n                return QM.extractMinTerms(term).map(minTerm => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    pill: true,\n                    bg: \"info\",\n                    children: minTerm\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 49\n                  }, this), it++ !== end && \",\"]\n                }, void 0, true));\n              })(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"success\",\n                className: \"ml-1\",\n                children: QM.toString(term, props.varCount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this), it++ !== end && /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = QMCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QMCard\");","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/src/components/QMCard.jsx"],"names":["Badge","Card","Row","Col","QM","QMCard","props","it","end","qmterms","length","getColor","qmTerm","title","map","term","console","log","minTerms","extractMinTerms","minTerm","toString","varCount"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,iBAAtC;AACA,OAAOC,EAAP,MAAe,0CAAf;;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,MAAIC,EAAE,GAAG,CAAT;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,OAAN,CAAcC,MAAd,GAAuB,CAAjC;;AAEA,MAAIC,QAAQ,GAAIC,MAAD,IAAY,CAE1B,CAFD;;AAIA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA,gBAAcN,KAAK,CAACO;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gBACKP,KAAK,CAACG,OAAN,CAAcK,GAAd,CAAmBC,IAAD,IAAU;AACzB,4BACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,0CAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA,yBACKC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB,CADL,EAEK,GAFL,EAGK,CAAC,MAAM;AACJ,sBAAMG,QAAQ,GAAGd,EAAE,CAACe,eAAH,CAAmBJ,IAAnB,CAAjB;AACA,sBAAMP,GAAG,GAAGU,QAAQ,CAACR,MAAT,GAAkB,CAA9B;AACA,oBAAIH,EAAE,GAAG,CAAT;AACA,uBAAOH,EAAE,CAACe,eAAH,CAAmBJ,IAAnB,EAAyBD,GAAzB,CAA8BM,OAAD,iBAChC;AAAA,0CACI,QAAC,KAAD;AAAO,oBAAA,IAAI,MAAX;AAAY,oBAAA,EAAE,EAAC,MAAf;AAAA,8BACKA;AADL;AAAA;AAAA;AAAA;AAAA,0BADJ,EAIKb,EAAE,OAAOC,GAAT,IAAgB,GAJrB;AAAA,gCADG,CAAP;AAQH,eAZA,GAHL,EAgBK,GAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAmBI;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAC,SAAV;AAAoB,gBAAA,SAAS,EAAC,MAA9B;AAAA,0BACKJ,EAAE,CAACiB,QAAH,CAAYN,IAAZ,EAAkBT,KAAK,CAACgB,QAAxB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EA0BKf,EAAE,OAAOC,GAAT,iBAAgB;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBA1BrB;AAAA,wBADJ;AA8BH,OA/BA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;KA/CuBH,M","sourcesContent":["import { Badge, Card, Row, Col } from \"react-bootstrap\";\r\nimport QM from \"../scripts/BooleanSimplifier/QMFunctions\";\r\n\r\nexport default function QMCard(props) {\r\n    let it = 0;\r\n    let end = props.qmterms.length - 1;\r\n\r\n    let getColor = (qmTerm) => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header>{props.title}</Card.Header>\r\n            <Card.Body>\r\n                {props.qmterms.map((term) => {\r\n                    return (\r\n                        <>\r\n                            <div className=\"mb-1 mt-1 d-flex justify-content-between\">\r\n                                <div className=\"\">\r\n                                    {console.log(\"Term: \", term)}\r\n                                    {\"(\"}\r\n                                    {(() => {\r\n                                        const minTerms = QM.extractMinTerms(term);\r\n                                        const end = minTerms.length - 1;\r\n                                        let it = 0;\r\n                                        return QM.extractMinTerms(term).map((minTerm) => (\r\n                                            <>\r\n                                                <Badge pill bg=\"info\">\r\n                                                    {minTerm}\r\n                                                </Badge>\r\n                                                {it++ !== end && \",\"}\r\n                                            </>\r\n                                        ));\r\n                                    })()}\r\n                                    {\")\"}\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <Badge bg=\"success\" className=\"ml-1\">\r\n                                        {QM.toString(term, props.varCount)}\r\n                                    </Badge>\r\n                                </div>\r\n                            </div>\r\n                            {it++ !== end && <hr className=\"m-0\" />}\r\n                        </>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}