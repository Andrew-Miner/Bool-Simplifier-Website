{"ast":null,"code":"import _slicedToArray from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"bsPrefix\", \"className\", \"style\", \"dialogClassName\", \"contentClassName\", \"children\", \"dialogAs\", \"aria-labelledby\", \"show\", \"animation\", \"backdrop\", \"keyboard\", \"onEscapeKeyDown\", \"onShow\", \"onHide\", \"container\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"onEntered\", \"onExit\", \"onExiting\", \"onEnter\", \"onEntering\", \"onExited\", \"backdropClassName\", \"manager\"];\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from 'react-overlays/Modal';\nimport BootstrapModalManager from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar manager;\nvar defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, _objectSpread(_objectSpread({}, props), {}, {\n    timeout: null\n  }));\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, _objectSpread(_objectSpread({}, props), {}, {\n    timeout: null\n  }));\n}\n/* eslint-enable no-use-before-define */\n\n\nvar Modal = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      style = _ref.style,\n      dialogClassName = _ref.dialogClassName,\n      contentClassName = _ref.contentClassName,\n      children = _ref.children,\n      Dialog = _ref.dialogAs,\n      ariaLabelledby = _ref['aria-labelledby'],\n      show = _ref.show,\n      animation = _ref.animation,\n      backdrop = _ref.backdrop,\n      keyboard = _ref.keyboard,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      onShow = _ref.onShow,\n      onHide = _ref.onHide,\n      container = _ref.container,\n      autoFocus = _ref.autoFocus,\n      enforceFocus = _ref.enforceFocus,\n      restoreFocus = _ref.restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onExited = _ref.onExited,\n      backdropClassName = _ref.backdropClassName,\n      propsManager = _ref.manager,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalStyle = _useState2[0],\n      setStyle = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animateStaticModal = _useState4[0],\n      setAnimateStaticModal = _useState4[1];\n\n  var waitingForMouseUpRef = useRef(false);\n  var ignoreBackdropClickRef = useRef(false);\n  var removeStaticModalAnimationRef = useRef(null); // TODO: what's this type\n\n  var _useCallbackRef = useCallbackRef(),\n      _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),\n      modal = _useCallbackRef2[0],\n      setModalRef = _useCallbackRef2[1];\n\n  var mergedRef = useMergedRefs(ref, setModalRef);\n  var handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  var modalContext = useMemo(function () {\n    return {\n      onHide: handleHide\n    };\n  }, [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (!manager) manager = new BootstrapModalManager();\n    return manager;\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    var containerIsOverflowing = getModalManager().isContainerOverflowing(modal);\n    var modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  var handleWindowResize = useEventCallback(function () {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(function () {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  var handleDialogMouseDown = function handleDialogMouseDown() {\n    waitingForMouseUpRef.current = true;\n  };\n\n  var handleMouseUp = function handleMouseUp(e) {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  var handleStaticModalAnimation = function handleStaticModalAnimation() {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, function () {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  var handleStaticBackdropClick = function handleStaticBackdropClick(e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  var handleClick = function handleClick(e) {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide();\n  };\n\n  var handleEscapeKeyDown = function handleEscapeKeyDown(e) {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in react-overlays,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  var handleEnter = function handleEnter(node) {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    onEnter == null ? void 0 : onEnter.apply(void 0, [node].concat(args));\n  };\n\n  var handleExit = function handleExit(node) {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    onExit == null ? void 0 : onExit.apply(void 0, [node].concat(args));\n  };\n\n  var handleEntering = function handleEntering(node) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    onEntering == null ? void 0 : onEntering.apply(void 0, [node].concat(args)); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  var handleExited = function handleExited(node) {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  var renderBackdrop = useCallback(function (backdropProps) {\n    return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, backdropProps), {}, {\n      className: classNames(\"\".concat(bsPrefix, \"-backdrop\"), backdropClassName, !animation && 'show')\n    }));\n  }, [animation, backdropClassName, bsPrefix]);\n\n  var baseModalStyle = _objectSpread(_objectSpread({}, style), modalStyle); // Sets `display` always block when `animation` is false\n\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  var renderDialog = function renderDialog(dialogProps) {\n    return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n      role: \"dialog\"\n    }, dialogProps), {}, {\n      style: baseModalStyle,\n      className: classNames(className, bsPrefix, animateStaticModal && \"\".concat(bsPrefix, \"-static\")),\n      onClick: backdrop ? handleClick : undefined,\n      onMouseUp: handleMouseUp,\n      \"aria-labelledby\": ariaLabelledby,\n      children: /*#__PURE__*/_jsx(Dialog, _objectSpread(_objectSpread({}, props), {}, {\n        onMouseDown: handleDialogMouseDown,\n        className: dialogClassName,\n        contentClassName: contentClassName,\n        children: children\n      }))\n    }));\n  };\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      containerClassName: \"\".concat(bsPrefix, \"-open\"),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","map":{"version":3,"sources":["C:/Users/Andrew/Documents/JavaScript Projects/bool-simp/node_modules/react-bootstrap/esm/Modal.js"],"names":["classNames","addEventListener","canUseDOM","ownerDocument","removeEventListener","getScrollbarSize","useCallbackRef","useEventCallback","useMergedRefs","useWillUnmount","transitionEnd","React","useCallback","useMemo","useRef","useState","BaseModal","BootstrapModalManager","Fade","ModalBody","ModalContext","ModalDialog","ModalFooter","ModalHeader","ModalTitle","useBootstrapPrefix","jsx","_jsx","manager","defaultProps","show","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","props","timeout","BackdropTransition","Modal","forwardRef","ref","bsPrefix","className","style","dialogClassName","contentClassName","children","Dialog","ariaLabelledby","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","handleHide","modalContext","getModalManager","updateDialogStyle","node","containerIsOverflowing","isContainerOverflowing","modalIsOverflowing","scrollHeight","documentElement","clientHeight","paddingRight","undefined","paddingLeft","handleWindowResize","dialog","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","handleStaticBackdropClick","currentTarget","handleClick","handleEscapeKeyDown","preventDefault","handleEnter","display","args","handleExit","handleEntering","handleExited","renderBackdrop","backdropProps","baseModalStyle","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Provider","value","containerClassName","transition","backdropTransition","displayName","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from 'react-overlays/Modal';\nimport BootstrapModalManager from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet manager;\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null); // TODO: what's this type\n\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (!manager) manager = new BootstrapModalManager();\n    return manager;\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().isContainerOverflowing(modal);\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in react-overlays,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, ...args) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExit = (node, ...args) => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node, ...args);\n  };\n\n  const handleEntering = (node, ...args) => {\n    onEntering == null ? void 0 : onEntering(node, ...args); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(...args); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      containerClassName: `${bsPrefix}-open`,\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"]},"metadata":{},"sourceType":"module"}